AWSTemplateFormatVersion: 2010-09-09

Parameters:
  GitHubOwner:
    Type: String
    Default: team-easymap
    Description: GitHub Owner Name
  GitHubToken:
    Type: String
    Description: GitHub Token
    NoEcho: True
  BackRepository:
    Type: String
    Default: easymap-backend
    Description: GitHub Repository
  FrontRepository:
    Type: String
    Default: easymap-frontend
    Description: GitHub Repository
  BranchName:
    Type: String
    AllowedValues:
      - main
      - infra
  SystemName:
    Type: String
    Default: "easymap"
  Environment:
    Type: String
    AllowedValues:
      - prd

Resources:

  # CodeBuild

  # BackendBuildProject:
  #   Type: AWS::CodeBuild::Project
  #   Properties:
  #     Name: !Sub "${SystemName}-${Environment}-backend-build"
  #     ServiceRole:
  #       Fn::ImportValue:
  #         !Sub "${SystemName}-cicd-role"
  #     VpcConfig:
  #       Subnets:
  #         - Fn::ImportValue:
  #             !Sub "${SystemName}-${Environment}-protected-subnet01"
  #         - Fn::If:
  #           - DevEnvResource
  #           - !Ref "AWS::NoValue"
  #           - Fn::ImportValue:
  #               !Sub "${SystemName}-${Environment}-protected-subnet02"
  #       SecurityGroupIds:
  #         - Fn::ImportValue:
  #             !Sub "${SystemName}-${Environment}-default-sg"
  #       VpcId :
  #         Fn::ImportValue:
  #           !Sub "${SystemName}-${Environment}-vpc"
  #     Artifacts:
  #       Type: CODEPIPELINE
  #     Environment:
  #       Type: LINUX_CONTAINER
  #       ComputeType: BUILD_GENERAL1_SMALL
  #       Image: aws/codebuild/standard:5.0
  #       PrivilegedMode: true
  #       EnvironmentVariables:
  #         - Name: AWS_ACCOUNT_ID
  #           Value: !Ref AWS::AccountId
  #         - Name: IMAGE_NAME
  #           Value: !Sub "${SystemName}-backend"
  #     Source:
  #       Type: CODEPIPELINE
  #       BuildSpec: backend-build-buildspec.yml
  #     Cache:
  #       Modes:
  #         - LOCAL_DOCKER_LAYER_CACHE
  #       Type: LOCAL

  FrontendBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${SystemName}-${Environment}-frontend-build"
      ServiceRole:
        Fn::ImportValue:
          !Sub "${SystemName}-cicd-role"
      VpcConfig:
        Subnets:
          - Fn::ImportValue:
              !Sub "${SystemName}-${Environment}-public-subnet01"
        SecurityGroupIds:
          - Fn::ImportValue:
              !Sub "${SystemName}-${Environment}-default-sg"
        VpcId :
          Fn::ImportValue:
            !Sub "${SystemName}-${Environment}-vpc"
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
      Source:
        Type: CODEPIPELINE
        BuildSpec: frontend-build-buildspec.yml
      Cache:
        Modes:
          - LOCAL_DOCKER_LAYER_CACHE
        Type: LOCAL

  FrontendDeployProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${SystemName}-${Environment}-frontend-deploy"
      ServiceRole:
        Fn::ImportValue:
          !Sub "${SystemName}-cicd-role"
      VpcConfig:
        Subnets:
          - Fn::ImportValue:
              !Sub "${SystemName}-${Environment}-public-subnet01"
        SecurityGroupIds:
          - Fn::ImportValue:
              !Sub "${SystemName}-${Environment}-default-sg"
        VpcId :
          Fn::ImportValue:
            !Sub "${SystemName}-${Environment}-vpc"
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        EnvironmentVariables:
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
      Source:
        Type: CODEPIPELINE
        BuildSpec: frontend-deploy-buildspec.yml
      Cache:
        Modes:
          - LOCAL_DOCKER_LAYER_CACHE
        Type: LOCAL

  # CodePipeline

  ProjectPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Sub codepipeline-${AWS::Region}-${AWS::AccountId}
        Type: S3
      Name: !Sub "${SystemName}-${Environment}-pipeline"
      RestartExecutionOnUpdate: false
      RoleArn:
        Fn::ImportValue:
          !Sub "${SystemName}-cicd-role"
      Stages:
        - Name: Source
          Actions:
            -
              Name: GitPull
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                - Name: Frontend-AppSourceOutput
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref FrontRepository
                Branch: !Ref BranchName
                OAuthToken: !Ref GitHubToken
              RunOrder: 1
        - Name: Build
          Actions:
            # - Name: backend-build
            #   InputArtifacts:
            #     - Name: "backend-AppSourceOutput"
            #   ActionTypeId:
            #     Category: Build
            #     Owner: AWS
            #     Version: 1
            #     Provider: CodeBuild
            #   OutputArtifacts:
            #     - Name: "BuildOutput-backend-container"
            #   Configuration:
            #     ProjectName: !Sub "${SystemName}-${Environment}-backend-build"
            - Name: frontend-build
              InputArtifacts:
                - Name: "Frontend-AppSourceOutput"
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              OutputArtifacts:
                - Name: "Frontend-BuildOutput"
              Configuration:
                ProjectName: !Sub "${SystemName}-${Environment}-frontend-build"
        # - Name: Backend-Deploy
        #   Actions:
        #     - Name: backend-deploy
        #       InputArtifacts:
        #         - Name: BuildOutput-backend-container
        #       ActionTypeId:
        #         Category: Deploy
        #         Owner: AWS
        #         Version: 1
        #         Provider: CodeDeployToECS
        #       Configuration:
        #         ApplicationName: !Sub "AppECS-${SystemName}-${Environment}-backend-cluster-backend"
        #         DeploymentGroupName: !Sub "DgpECS-${SystemName}-${Environment}-backend-cluster-backend"
        #         Image1ArtifactName: "BuildOutput-backend-container"
        #         TaskDefinitionTemplateArtifact: "BuildOutput-backend-container"
        #         Image1ContainerName: "IMAGE1_NAME"
        #         TaskDefinitionTemplatePath: "taskdef.json"
        #         AppSpecTemplateArtifact: "BuildOutput-backend-container"
        #         AppSpecTemplatePath: "appspec.yml"
        - Name: Frontend-Deploy
          Actions:
            - Name: frontend-deploy
              InputArtifacts:
                - Name: "Frontend-BuildOutput"
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Sub "${SystemName}-${Environment}-frontend-deploy"


  # SnsTopic

  DeploySnsTopic:
    Type: 'AWS::SNS::Topic'
    DependsOn: ProjectPipeline

  # SnsTopicPolicy

  DeploySnsTopicPolicy:
    Type: AWS::SNS::TopicPolicy
    DependsOn: ProjectPipeline
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: CodeNotification_publish
            Effect: Allow
            Principal:
              Service: "codestar-notifications.amazonaws.com"
            Action:
              - "SNS:Publish"
            Resource: !Ref DeploySnsTopic
      Topics:
        - !Ref DeploySnsTopic

  # NotificationRule
  DeployNotificationRule:
    Type: AWS::CodeStarNotifications::NotificationRule
    DependsOn: ProjectPipeline
    Properties:
      DetailType: "FULL"
      EventTypeIds:
        - "codepipeline-pipeline-pipeline-execution-resumed"
        - "codepipeline-pipeline-pipeline-execution-failed"
        - "codepipeline-pipeline-pipeline-execution-canceled"
        - "codepipeline-pipeline-pipeline-execution-succeeded"
        - "codepipeline-pipeline-pipeline-execution-superseded"
      Name: !Sub ${SystemName}-${Environment}-deploy-notification
      Resource:
        Fn::Join:
          - ""
          - - "arn:aws:codepipeline:"
            - !Ref "AWS::Region"
            - ":"
            - !Ref "AWS::AccountId"
            - ":"
            - !Ref ProjectPipeline
      Status: "ENABLED"
      Targets:
        - TargetAddress: !Ref DeploySnsTopic
          TargetType: "SNS"
