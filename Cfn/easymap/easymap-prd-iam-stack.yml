AWSTemplateFormatVersion: 2010-09-09

Parameters:
  SystemName:
    Type: String
    Default: "easymap"
  Environment:
    Type: String
    AllowedValues:
      - prd
  AwsMasterAccountID:
    Type: String
    
Resources:
  # IAM Policy
  ApplicationEcsRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "${SystemName}-${Environment}-ecs-policy"
      Description: "Policy for Application Role"
      Path: "/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "s3:ListBucket"
            Resource:
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-images/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-images/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-raw/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-images"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-images"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-raw"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw"
          -
            Effect: "Allow"
            Action: "s3:*"
            Resource:
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-images/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-images/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-raw/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-images"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-images"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-raw"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw"
          - Effect: "Allow"
            Action: "sns:Publish"
            Resource: "*"

  LocalDevelopPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "${SystemName}-${Environment}-local-develop-policy"
      Description: "Policy for local develop"
      Path: "/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "s3:ListBucket"
            Resource:
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-images"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-images"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw"
          -
            Effect: "Allow"
            Action: "s3:*"
            Resource:
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-images/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-images"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw"

  DataManagePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "${SystemName}-${Environment}-data-manage-policy"
      Description: "Policy for Data Manager"
      Path: "/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "s3:ListBucket"
            Resource:
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-processed/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-processed/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-geography-processed/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-raw/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-processed"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-processed"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-geography-processed"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-raw"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw"
          -
            Effect: "Allow"
            Action:
              - "s3:*"
            Resource:
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-processed/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-processed/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-geography-processed/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-raw/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-processed"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-processed"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-geography-processed"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-raw"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw"

  LambdaRolePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "${SystemName}-${Environment}-lambda-role-policy"
      Description: "Policy for Lambda Role"
      Path: "/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "s3:ListBucket"
            Resource:
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-images/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-images/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-processed/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-processed/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-geography-processed/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-raw/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-images"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-images"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-processed"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-processed"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-geography-processed"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-raw"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw"
          - 
            Effect: "Allow"
            Action:
              - "s3:*"
              # - "s3:GetObject"
              # - "s3:PutObject"
              # - "s3:PutObjectAcl"
            Resource:
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-images/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-images/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-processed/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-processed/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-geography-processed/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-raw/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw/*"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-images"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-images"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-processed"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-processed"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-geography-processed"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-user-route-raw"
              - !Sub "arn:aws:s3:::${SystemName}-${Environment}-local-user-route-raw"

  SnsPutCloudWatchLogsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "${SystemName}-${Environment}-SnsPutLogPolicy"
      Description: "Put CloudWatchLogs Policy for Delivery SMS Messaging"
      Path: "/"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
              - "logs:PutMetricFilter"
              - "logs:PutRetentionPolicy"
            Resource:
              - "*"

  CICDExecutionPolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: !Sub ${SystemName}-${Environment}-codebuild-policy
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action:
                - ecr:BatchCheckLayerAvailability
                - ecr:BatchGetImage
                - ecr:CompleteLayerUpload
                - ecr:DescribeImages
                - ecr:DescribeImageScanFindings
                - ecr:DescribeRepositories
                - ecr:GetAuthorizationToken
                - ecr:GetDownloadUrlForLayer
                - ecr:GetLifecyclePolicy
                - ecr:GetLifecyclePolicyPreview
                - ecr:GetRepositoryPolicy
                - ecr:InitiateLayerUpload
                - ecr:ListImages
                - ecr:ListTagsForResource
                - ecr:PutImage
                - ecr:UploadLayerPart
              Resource: '*'
            - Effect: Allow
              Action:
                - codebuild:BatchPutCodeCoverages
                - codebuild:BatchPutTestCases
                - codebuild:CreateReport
                - codebuild:CreateReportGroup
                - codebuild:RetryBuild
                - codebuild:StartBuild
                - codebuild:StopBuild
                - codebuild:UpdateReport
              Resource: "*"
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: "*"
            - Effect: Allow
              Action:
                # - s3:PutObject
                # - s3:GetObject
                # - s3:GetObjectVersion
                # - s3:GetBucketAcl
                # - s3:GetBucketLocation
                # - s3:PutObject
                # - s3:GetObject
                # - s3:GetObjectVersion
                # - s3:DeleteObject
                # - s3:DeleteBucket
                - s3:*
              Resource: "*"
            - Effect: Allow
              Action:
                - ssm:GetParameter
                - ssm:GetParameters
              Resource: "*"
            - Effect: Allow
              Action:
                - iam:PassRole
              Resource: "*"
              Condition:
                StringLike:
                  "iam:PassedToService":
                    - ecs-tasks.amazonaws.com
            - Effect: Allow
              Action:
                - codecommit:AssociateApprovalRuleTemplateWithRepository
                - codecommit:BatchAssociateApprovalRuleTemplateWithRepositories
                - codecommit:BatchDisassociateApprovalRuleTemplateFromRepositories
                - codecommit:BatchGet*
                - codecommit:BatchDescribe*
                - codecommit:Create*
                - codecommit:DeleteBranch
                - codecommit:DeleteFile
                - codecommit:Describe*
                - codecommit:DisassociateApprovalRuleTemplateFromRepository
                - codecommit:EvaluatePullRequestApprovalRules
                - codecommit:Get*
                - codecommit:List*
                - codecommit:Merge*
                - codecommit:OverridePullRequestApprovalRules
                - codecommit:Put*
                - codecommit:Post*
                - codecommit:TagResource
                - codecommit:Test*
                - codecommit:UntagResource
                - codecommit:Update*
                - codecommit:GitPull
                - codecommit:GitPush
              Resource: "*"
            - Effect: Allow
              Action:
                - codedeploy:CreateDeployment
                - codedeploy:GetApplication
                - codedeploy:GetApplicationRevision
                - codedeploy:GetDeployment
                - codedeploy:GetDeploymentConfig
                - codedeploy:RegisterApplicationRevision
              Resource: "*"
            - Effect: Allow 
              Action:
                - elasticloadbalancing:*
                - ec2:*
                - sns:*
                - cloudwatch:*
                - ecs:*
                - codebuild:*
                - cloudfront:*
              Resource: "*"
            - Effect: Allow 
              Action:
                - codestar-connections:UseConnection
              Resource: "*"

  # IAM Role
  ApplicationEcsRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref ApplicationEcsRolePolicy
      RoleName: !Sub "${SystemName}-${Environment}-app-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service: "ecs-tasks.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"

  ApplicationLocalDevelopRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref ApplicationEcsRolePolicy
        - !Ref LocalDevelopPolicy
      RoleName:  !Sub "${SystemName}-${Environment}-local-develop-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !Sub "arn:aws:iam::${AwsMasterAccountID}:root"
            Action: "sts:AssumeRole"
            # Condition:
            #   Bool:
            #     "aws:MultiFactorAuthPresent": "true"
      Path: "/"

  DataManageRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref DataManagePolicy
      RoleName:  !Sub "${SystemName}-${Environment}-data-manage-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              AWS: !Sub "arn:aws:iam::${AwsMasterAccountID}:root"
            Action: "sts:AssumeRole"
            # Condition:
            #   Bool:
            #     "aws:MultiFactorAuthPresent": "true"
      Path: "/"

  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - !Ref LambdaRolePolicy
        - "arn:aws:iam::905418448509:policy/service-role/AWSLambdaBasicExecutionRole-43ebbf5a-c375-438e-b9e8-5db382cac855"
      RoleName: !Sub "${SystemName}-${Environment}-lambda-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service: "lambda.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"

  CICDExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${SystemName}-cicd-role"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "cloudformation.amazonaws.com"
                - "codepipeline.amazonaws.com"
                - "codebuild.amazonaws.com"
                - "codedeploy.amazonaws.com"
                - "ecs-tasks.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: /
      ManagedPolicyArns:
        - !Ref CICDExecutionPolicy 
#        - arn:aws:iam::aws:policy/AdministratorAccess
      
  SnsPutLogRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${SystemName}-${Environment}-SnsPutLogRole"
      ManagedPolicyArns:
        - !Ref SnsPutCloudWatchLogsPolicy
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service: "sns.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"

Outputs:
  CICDExecutionRole:
    Description: RoleARN of CICD Execution
    Value: !GetAtt CICDExecutionRole.Arn
    Export:
      Name: !Join
        - ''
        - - !Ref SystemName
          - "-cicd-role"

  LambdaRoleArn:
    Description: RoleARN of Lambda
    Value: !GetAtt LambdaRole.Arn
    Export:
      Name: LambdaRoleArn
